name: Build DeepSeek-OCR Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'deepseek_ocr_server.py'
      - 'Dockerfile.deepseek*'
      - '.github/workflows/build-deepseek-ocr.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/deepseek-ocr

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Free up disk space
      run: |
        echo "=== Before cleanup ==="
        df -h
        
        # Remove unnecessary files to free up space
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker system prune -af
        
        echo "=== After cleanup ==="
        df -h
    
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image (prebuilt base)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.deepseek.prebuilt
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        # Don't load image locally to save disk space
        provenance: false
        sbom: false

    - name: Image digest
      run: echo ${{ steps.meta.outputs.digest }}

