name: Build DeepSeek-OCR Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'deepseek_ocr_server.py'
      - 'Dockerfile.deepseek.runpod'
      - '.github/workflows/build-deepseek-ocr.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/deepseek-ocr

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Check disk space before
      run: df . -h
    
    - name: Aggressive disk cleanup
      run: |
        echo "=== Removing Docker images ==="
        sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
        
        echo "=== Removing large directories ==="
        sudo rm -rf \
          /usr/share/dotnet /usr/local/lib/android /opt/ghc \
          /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
          /usr/lib/jvm /opt/hostedtoolcache/CodeQL || true
        
        echo "=== Purging packages ==="
        sudo apt-get update >/dev/null 2>&1
        sudo apt-get purge -y \
          '^mongodb-.*' '^mysql-.*' '^postgresql-.*' '^dotnet-.*' \
          azure-cli google-chrome-stable firefox \
          google-cloud-sdk microsoft-edge-stable \
          >/dev/null 2>&1 || true
        
        sudo apt-get autoremove -y >/dev/null 2>&1
        sudo apt-get autoclean -y >/dev/null 2>&1
        sudo apt-get clean >/dev/null 2>&1
        
    - name: Check disk space after cleanup
      run: |
        echo "=== After cleanup ==="
        df -h
        echo "=== Largest packages ==="
        sudo dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -nr | head -20
    
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Remove .git to save space
      run: |
        df . -h
        sudo rm -rf ${GITHUB_WORKSPACE}/.git
        echo "=== After removing .git ==="
        df . -h

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image (RunPod optimized - CUDA base)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.deepseek.runpod
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:runpod
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        labels: ${{ steps.meta.outputs.labels }}
        # Disable cache to save disk space
        no-cache: true
        # Don't load image locally to save disk space
        provenance: false
        sbom: false

    - name: Image digest
      run: echo ${{ steps.meta.outputs.digest }}

